load("@io_bazel_rules_kotlin//kotlin:core.bzl",
     "define_kt_toolchain",
     "kt_kotlinc_options",
     "kt_compiler_plugin")

load(
    "@io_bazel_rules_kotlin//kotlin:jvm.bzl",
    "kt_javac_options",
    "kt_jvm_library",
)

KOTLIN_LANGUAGE_LEVEL = "1.5"

kt_kotlinc_options(
    name = "kotlinc_options",
    x_allow_result_return_type = True,
    x_inline_classes = True,
    #    x_opt_in = ["kotlinx.coroutines.ExperimentalCoroutinesApi"]
)

kt_javac_options(
    name = "default_javac_options",
)

define_kt_toolchain(
    name = "kotlin_toolchain",
    api_version = KOTLIN_LANGUAGE_LEVEL,
    javac_options = ":default_javac_options",
    jvm_target = "1.8",
    kotlinc_options = ":kotlinc_options",
    language_version = KOTLIN_LANGUAGE_LEVEL,
)

kt_compiler_plugin(
    name = "serialization_plugin",
    compile_phase = True,
    id = "org.jetbrains.kotlin.serialization",
    stubs_phase = True,
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_jetbrains_kotlin//:kotlinx-serialization-compiler-plugin",
    ],
)

#kt_jvm_library(
#    name = "kotlin_serialization",
#    srcs = [],
#    exported_compiler_plugins = [":serialization_plugin"],
#    visibility = ["//visibility:public"],
#    exports = [
#        "@maven//:org_jetbrains_kotlinx_kotlinx_serialization_core_jvm",
#    ],
#)

kt_compiler_plugin(
    name = "no_arg_plugin",
    compile_phase = True,
    id = "org.jetbrains.kotlin.noarg",
    options = {
        "preset": "jpa",
    },
    stubs_phase = True,
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_jetbrains_kotlin//:noarg-compiler-plugin",
    ],
)

kt_compiler_plugin(
    name = "allopen_plugin",
    compile_phase = True,
    id = "org.jetbrains.kotlin.allopen",
    options = {
        "preset": "spring",
    },
    stubs_phase = True,
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_jetbrains_kotlin//:allopen-compiler-plugin",
    ],
)
